{"version":3,"file":"commonHelpers.js","sources":["../src/js/API(pixabay).js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = \"44872402-0762bbf0a5ccd686fb6258473\";\nconst imageType = 'photo';\nconst orientation = 'horizontal';\nconst safeSearch = true;\n\nexport function getPictures(query) {\n    return fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&image_type=${imageType}&orientation=${orientation}&safesearch=${safeSearch}`)\n        .then((res) => {\n            if (!res.ok) {\n                throw new Error(res.status);\n            }\n            return res.json();\n        });\n}","// adding pop-ups from izitoasts gallery\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n// adding gallery library from simplelightbox \nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport function createMarkup({ hits }, cardContainer) {\n    if (hits.length === 0) {\n        onFetchError();\n        return;\n    }\n\n    const markup = hits.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads }) => {\n        return `\n            <li class=\"list-item\">\n                <a href=\"${largeImageURL}\">\n                    <img class=\"card-image\"\n                    src=\"${webformatURL}\"\n                    alt=\"${tags}\"\n                    width=\"360\">\n                </a>\n                <ul class=\"card-description-list\">\n                    <li class=\"card-description-item\">\n                        <h3 class=\"card-description-title\">Likes</h3>\n                        <p class=\"card-description-value\">${likes}</p>\n                    </li>\n                    <li class=\"card-description-item\">\n                        <h3 class=\"card-description-title\">Views</h3>\n                        <p class=\"card-description-value\">${views}</p>\n                    </li>\n                    <li class=\"card-description-item\">\n                        <h3 class=\"card-description-title\">Comments</h3>\n                        <p class=\"card-description-value\">${comments}</p>\n                    </li>\n                    <li class=\"card-description-item\">\n                        <h3 class=\"card-description-title\">Downloads</h3>\n                        <p class=\"card-description-value\">${downloads}</p>\n                    </li>\n                </ul>\n            </li>\n        `;\n    }).join('');\n\n    cardContainer.innerHTML = markup;\n\n    const lightbox = new SimpleLightbox('.card-container a', {\n        captions: true,\n        captionsData: 'alt',\n        captionPosition: 'bottom',\n        captionDelay: 250,\n    });\n\n    lightbox.refresh();\n}\n\nexport function onFetchError() {\n    iziToast.error({\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n    });\n}","import { getPictures } from './js/API(pixabay).js';\nimport { createMarkup, onFetchError } from './js/render-functions';\n\nconst formSearch = document.querySelector('.form-search');\nconst cardContainer = document.querySelector('.card-container');\nconst loader = document.querySelector('.loader');\n\nformSearch.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(event) {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const userValue = form.elements.search.value.toLowerCase();\n\n    showLoader();\n\n    getPictures(userValue)\n        .then((data) => createMarkup(data, cardContainer))\n        .catch(onFetchError)\n        .finally(() => {\n            form.reset();\n            hideLoader();\n        });\n}\n\nfunction showLoader() {\n    loader.style.display = 'flex';\n}\n\nfunction hideLoader() {\n    \n    loader.style.display = 'none';\n}"],"names":["BASE_URL","API_KEY","imageType","orientation","safeSearch","getPictures","query","res","createMarkup","hits","cardContainer","onFetchError","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","iziToast","formSearch","loader","handlerSearch","event","form","userValue","showLoader","data","hideLoader"],"mappings":"6vBAAA,MAAMA,EAAW,2BACXC,EAAU,qCACVC,EAAY,QACZC,EAAc,aACdC,EAAa,GAEZ,SAASC,EAAYC,EAAO,CAC/B,OAAO,MAAM,GAAGN,CAAQ,QAAQC,CAAO,MAAMK,CAAK,eAAeJ,CAAS,gBAAgBC,CAAW,eAAeC,CAAU,EAAE,EAC3H,KAAMG,GAAQ,CACX,GAAI,CAACA,EAAI,GACL,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE9B,OAAOA,EAAI,MACvB,CAAS,CACT,CCPO,SAASC,EAAa,CAAE,KAAAC,CAAM,EAAEC,EAAe,CAClD,GAAID,EAAK,SAAW,EAAG,CACnBE,IACA,MACH,CAED,MAAMC,EAASH,EAAK,IAAI,CAAC,CACrB,aAAAI,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,KACO;AAAA;AAAA,2BAEYL,CAAa;AAAA;AAAA,2BAEbD,CAAY;AAAA,2BACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAM6BC,CAAK;AAAA;AAAA;AAAA;AAAA,4DAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4DAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,4DAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,SAKhE,EAAE,KAAK,EAAE,EAEVT,EAAc,UAAYE,EAET,IAAIQ,EAAe,oBAAqB,CACrD,SAAU,GACV,aAAc,MACd,gBAAiB,SACjB,aAAc,GACtB,CAAK,EAEQ,QAAO,CACpB,CAEO,SAAST,GAAe,CAC3BU,EAAS,MAAM,CACX,QAAS,0EACjB,CAAK,CACL,CChEA,MAAMC,EAAa,SAAS,cAAc,cAAc,EAClDZ,EAAgB,SAAS,cAAc,iBAAiB,EACxDa,EAAS,SAAS,cAAc,SAAS,EAE/CD,EAAW,iBAAiB,SAAUE,CAAa,EAEnD,SAASA,EAAcC,EAAO,CAC1BA,EAAM,eAAc,EAEpB,MAAMC,EAAOD,EAAM,cACbE,EAAYD,EAAK,SAAS,OAAO,MAAM,cAE7CE,IAEAvB,EAAYsB,CAAS,EAChB,KAAME,GAASrB,EAAaqB,EAAMnB,CAAa,CAAC,EAChD,MAAMC,CAAY,EAClB,QAAQ,IAAM,CACXe,EAAK,MAAK,EACVI,GACZ,CAAS,CACT,CAEA,SAASF,GAAa,CAClBL,EAAO,MAAM,QAAU,MAC3B,CAEA,SAASO,GAAa,CAElBP,EAAO,MAAM,QAAU,MAC3B"}